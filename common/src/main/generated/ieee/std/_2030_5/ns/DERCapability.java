//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.11.19 at 12:20:19 PM CET 
//


package ieee.std._2030_5.ns;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Distributed energy resource type and nameplate ratings.
 * 
 * <p>Java class for DERCapability complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DERCapability"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{urn:ieee:std:2030.5:ns}Resource"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="modesSupported" type="{urn:ieee:std:2030.5:ns}DERControlType"/&gt;
 *         &lt;element name="rtgAbnormalCategory" type="{urn:ieee:std:2030.5:ns}UInt8" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxA" type="{urn:ieee:std:2030.5:ns}CurrentRMS" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxAh" type="{urn:ieee:std:2030.5:ns}AmpereHour" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxChargeRateVA" type="{urn:ieee:std:2030.5:ns}ApparentPower" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxChargeRateW" type="{urn:ieee:std:2030.5:ns}ActivePower" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxDischargeRateVA" type="{urn:ieee:std:2030.5:ns}ApparentPower" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxDischargeRateW" type="{urn:ieee:std:2030.5:ns}ActivePower" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxV" type="{urn:ieee:std:2030.5:ns}VoltageRMS" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxVA" type="{urn:ieee:std:2030.5:ns}ApparentPower" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxVar" type="{urn:ieee:std:2030.5:ns}ReactivePower" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxVarNeg" type="{urn:ieee:std:2030.5:ns}ReactivePower" minOccurs="0"/&gt;
 *         &lt;element name="rtgMaxW" type="{urn:ieee:std:2030.5:ns}ActivePower"/&gt;
 *         &lt;element name="rtgMaxWh" type="{urn:ieee:std:2030.5:ns}WattHour" minOccurs="0"/&gt;
 *         &lt;element name="rtgMinPFOverExcited" type="{urn:ieee:std:2030.5:ns}PowerFactor" minOccurs="0"/&gt;
 *         &lt;element name="rtgMinPFUnderExcited" type="{urn:ieee:std:2030.5:ns}PowerFactor" minOccurs="0"/&gt;
 *         &lt;element name="rtgMinV" type="{urn:ieee:std:2030.5:ns}VoltageRMS" minOccurs="0"/&gt;
 *         &lt;element name="rtgNormalCategory" type="{urn:ieee:std:2030.5:ns}UInt8" minOccurs="0"/&gt;
 *         &lt;element name="rtgOverExcitedPF" type="{urn:ieee:std:2030.5:ns}PowerFactor" minOccurs="0"/&gt;
 *         &lt;element name="rtgOverExcitedW" type="{urn:ieee:std:2030.5:ns}ActivePower" minOccurs="0"/&gt;
 *         &lt;element name="rtgReactiveSusceptance" type="{urn:ieee:std:2030.5:ns}ReactiveSusceptance" minOccurs="0"/&gt;
 *         &lt;element name="rtgUnderExcitedPF" type="{urn:ieee:std:2030.5:ns}PowerFactor" minOccurs="0"/&gt;
 *         &lt;element name="rtgUnderExcitedW" type="{urn:ieee:std:2030.5:ns}ActivePower" minOccurs="0"/&gt;
 *         &lt;element name="rtgVNom" type="{urn:ieee:std:2030.5:ns}VoltageRMS" minOccurs="0"/&gt;
 *         &lt;element name="type" type="{urn:ieee:std:2030.5:ns}DERType"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DERCapability", propOrder = {
    "modesSupported",
    "rtgAbnormalCategory",
    "rtgMaxA",
    "rtgMaxAh",
    "rtgMaxChargeRateVA",
    "rtgMaxChargeRateW",
    "rtgMaxDischargeRateVA",
    "rtgMaxDischargeRateW",
    "rtgMaxV",
    "rtgMaxVA",
    "rtgMaxVar",
    "rtgMaxVarNeg",
    "rtgMaxW",
    "rtgMaxWh",
    "rtgMinPFOverExcited",
    "rtgMinPFUnderExcited",
    "rtgMinV",
    "rtgNormalCategory",
    "rtgOverExcitedPF",
    "rtgOverExcitedW",
    "rtgReactiveSusceptance",
    "rtgUnderExcitedPF",
    "rtgUnderExcitedW",
    "rtgVNom",
    "type"
})
public class DERCapability
    extends Resource
{

    @XmlElement(required = true)
    protected DERControlType modesSupported;
    @XmlSchemaType(name = "unsignedByte")
    protected Short rtgAbnormalCategory;
    protected CurrentRMS rtgMaxA;
    protected AmpereHour rtgMaxAh;
    protected ApparentPower rtgMaxChargeRateVA;
    protected ActivePower rtgMaxChargeRateW;
    protected ApparentPower rtgMaxDischargeRateVA;
    protected ActivePower rtgMaxDischargeRateW;
    protected VoltageRMS rtgMaxV;
    protected ApparentPower rtgMaxVA;
    protected ReactivePower rtgMaxVar;
    protected ReactivePower rtgMaxVarNeg;
    @XmlElement(required = true)
    protected ActivePower rtgMaxW;
    protected WattHour rtgMaxWh;
    protected PowerFactor rtgMinPFOverExcited;
    protected PowerFactor rtgMinPFUnderExcited;
    protected VoltageRMS rtgMinV;
    @XmlSchemaType(name = "unsignedByte")
    protected Short rtgNormalCategory;
    protected PowerFactor rtgOverExcitedPF;
    protected ActivePower rtgOverExcitedW;
    protected ReactiveSusceptance rtgReactiveSusceptance;
    protected PowerFactor rtgUnderExcitedPF;
    protected ActivePower rtgUnderExcitedW;
    protected VoltageRMS rtgVNom;
    @XmlElement(required = true)
    protected DERType type;

    /**
     * Gets the value of the modesSupported property.
     * 
     * @return
     *     possible object is
     *     {@link DERControlType }
     *     
     */
    public DERControlType getModesSupported() {
        return modesSupported;
    }

    /**
     * Sets the value of the modesSupported property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERControlType }
     *     
     */
    public void setModesSupported(DERControlType value) {
        this.modesSupported = value;
    }

    /**
     * Gets the value of the rtgAbnormalCategory property.
     * 
     * @return
     *     possible object is
     *     {@link Short }
     *     
     */
    public Short getRtgAbnormalCategory() {
        return rtgAbnormalCategory;
    }

    /**
     * Sets the value of the rtgAbnormalCategory property.
     * 
     * @param value
     *     allowed object is
     *     {@link Short }
     *     
     */
    public void setRtgAbnormalCategory(Short value) {
        this.rtgAbnormalCategory = value;
    }

    /**
     * Gets the value of the rtgMaxA property.
     * 
     * @return
     *     possible object is
     *     {@link CurrentRMS }
     *     
     */
    public CurrentRMS getRtgMaxA() {
        return rtgMaxA;
    }

    /**
     * Sets the value of the rtgMaxA property.
     * 
     * @param value
     *     allowed object is
     *     {@link CurrentRMS }
     *     
     */
    public void setRtgMaxA(CurrentRMS value) {
        this.rtgMaxA = value;
    }

    /**
     * Gets the value of the rtgMaxAh property.
     * 
     * @return
     *     possible object is
     *     {@link AmpereHour }
     *     
     */
    public AmpereHour getRtgMaxAh() {
        return rtgMaxAh;
    }

    /**
     * Sets the value of the rtgMaxAh property.
     * 
     * @param value
     *     allowed object is
     *     {@link AmpereHour }
     *     
     */
    public void setRtgMaxAh(AmpereHour value) {
        this.rtgMaxAh = value;
    }

    /**
     * Gets the value of the rtgMaxChargeRateVA property.
     * 
     * @return
     *     possible object is
     *     {@link ApparentPower }
     *     
     */
    public ApparentPower getRtgMaxChargeRateVA() {
        return rtgMaxChargeRateVA;
    }

    /**
     * Sets the value of the rtgMaxChargeRateVA property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApparentPower }
     *     
     */
    public void setRtgMaxChargeRateVA(ApparentPower value) {
        this.rtgMaxChargeRateVA = value;
    }

    /**
     * Gets the value of the rtgMaxChargeRateW property.
     * 
     * @return
     *     possible object is
     *     {@link ActivePower }
     *     
     */
    public ActivePower getRtgMaxChargeRateW() {
        return rtgMaxChargeRateW;
    }

    /**
     * Sets the value of the rtgMaxChargeRateW property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActivePower }
     *     
     */
    public void setRtgMaxChargeRateW(ActivePower value) {
        this.rtgMaxChargeRateW = value;
    }

    /**
     * Gets the value of the rtgMaxDischargeRateVA property.
     * 
     * @return
     *     possible object is
     *     {@link ApparentPower }
     *     
     */
    public ApparentPower getRtgMaxDischargeRateVA() {
        return rtgMaxDischargeRateVA;
    }

    /**
     * Sets the value of the rtgMaxDischargeRateVA property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApparentPower }
     *     
     */
    public void setRtgMaxDischargeRateVA(ApparentPower value) {
        this.rtgMaxDischargeRateVA = value;
    }

    /**
     * Gets the value of the rtgMaxDischargeRateW property.
     * 
     * @return
     *     possible object is
     *     {@link ActivePower }
     *     
     */
    public ActivePower getRtgMaxDischargeRateW() {
        return rtgMaxDischargeRateW;
    }

    /**
     * Sets the value of the rtgMaxDischargeRateW property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActivePower }
     *     
     */
    public void setRtgMaxDischargeRateW(ActivePower value) {
        this.rtgMaxDischargeRateW = value;
    }

    /**
     * Gets the value of the rtgMaxV property.
     * 
     * @return
     *     possible object is
     *     {@link VoltageRMS }
     *     
     */
    public VoltageRMS getRtgMaxV() {
        return rtgMaxV;
    }

    /**
     * Sets the value of the rtgMaxV property.
     * 
     * @param value
     *     allowed object is
     *     {@link VoltageRMS }
     *     
     */
    public void setRtgMaxV(VoltageRMS value) {
        this.rtgMaxV = value;
    }

    /**
     * Gets the value of the rtgMaxVA property.
     * 
     * @return
     *     possible object is
     *     {@link ApparentPower }
     *     
     */
    public ApparentPower getRtgMaxVA() {
        return rtgMaxVA;
    }

    /**
     * Sets the value of the rtgMaxVA property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApparentPower }
     *     
     */
    public void setRtgMaxVA(ApparentPower value) {
        this.rtgMaxVA = value;
    }

    /**
     * Gets the value of the rtgMaxVar property.
     * 
     * @return
     *     possible object is
     *     {@link ReactivePower }
     *     
     */
    public ReactivePower getRtgMaxVar() {
        return rtgMaxVar;
    }

    /**
     * Sets the value of the rtgMaxVar property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReactivePower }
     *     
     */
    public void setRtgMaxVar(ReactivePower value) {
        this.rtgMaxVar = value;
    }

    /**
     * Gets the value of the rtgMaxVarNeg property.
     * 
     * @return
     *     possible object is
     *     {@link ReactivePower }
     *     
     */
    public ReactivePower getRtgMaxVarNeg() {
        return rtgMaxVarNeg;
    }

    /**
     * Sets the value of the rtgMaxVarNeg property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReactivePower }
     *     
     */
    public void setRtgMaxVarNeg(ReactivePower value) {
        this.rtgMaxVarNeg = value;
    }

    /**
     * Gets the value of the rtgMaxW property.
     * 
     * @return
     *     possible object is
     *     {@link ActivePower }
     *     
     */
    public ActivePower getRtgMaxW() {
        return rtgMaxW;
    }

    /**
     * Sets the value of the rtgMaxW property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActivePower }
     *     
     */
    public void setRtgMaxW(ActivePower value) {
        this.rtgMaxW = value;
    }

    /**
     * Gets the value of the rtgMaxWh property.
     * 
     * @return
     *     possible object is
     *     {@link WattHour }
     *     
     */
    public WattHour getRtgMaxWh() {
        return rtgMaxWh;
    }

    /**
     * Sets the value of the rtgMaxWh property.
     * 
     * @param value
     *     allowed object is
     *     {@link WattHour }
     *     
     */
    public void setRtgMaxWh(WattHour value) {
        this.rtgMaxWh = value;
    }

    /**
     * Gets the value of the rtgMinPFOverExcited property.
     * 
     * @return
     *     possible object is
     *     {@link PowerFactor }
     *     
     */
    public PowerFactor getRtgMinPFOverExcited() {
        return rtgMinPFOverExcited;
    }

    /**
     * Sets the value of the rtgMinPFOverExcited property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerFactor }
     *     
     */
    public void setRtgMinPFOverExcited(PowerFactor value) {
        this.rtgMinPFOverExcited = value;
    }

    /**
     * Gets the value of the rtgMinPFUnderExcited property.
     * 
     * @return
     *     possible object is
     *     {@link PowerFactor }
     *     
     */
    public PowerFactor getRtgMinPFUnderExcited() {
        return rtgMinPFUnderExcited;
    }

    /**
     * Sets the value of the rtgMinPFUnderExcited property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerFactor }
     *     
     */
    public void setRtgMinPFUnderExcited(PowerFactor value) {
        this.rtgMinPFUnderExcited = value;
    }

    /**
     * Gets the value of the rtgMinV property.
     * 
     * @return
     *     possible object is
     *     {@link VoltageRMS }
     *     
     */
    public VoltageRMS getRtgMinV() {
        return rtgMinV;
    }

    /**
     * Sets the value of the rtgMinV property.
     * 
     * @param value
     *     allowed object is
     *     {@link VoltageRMS }
     *     
     */
    public void setRtgMinV(VoltageRMS value) {
        this.rtgMinV = value;
    }

    /**
     * Gets the value of the rtgNormalCategory property.
     * 
     * @return
     *     possible object is
     *     {@link Short }
     *     
     */
    public Short getRtgNormalCategory() {
        return rtgNormalCategory;
    }

    /**
     * Sets the value of the rtgNormalCategory property.
     * 
     * @param value
     *     allowed object is
     *     {@link Short }
     *     
     */
    public void setRtgNormalCategory(Short value) {
        this.rtgNormalCategory = value;
    }

    /**
     * Gets the value of the rtgOverExcitedPF property.
     * 
     * @return
     *     possible object is
     *     {@link PowerFactor }
     *     
     */
    public PowerFactor getRtgOverExcitedPF() {
        return rtgOverExcitedPF;
    }

    /**
     * Sets the value of the rtgOverExcitedPF property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerFactor }
     *     
     */
    public void setRtgOverExcitedPF(PowerFactor value) {
        this.rtgOverExcitedPF = value;
    }

    /**
     * Gets the value of the rtgOverExcitedW property.
     * 
     * @return
     *     possible object is
     *     {@link ActivePower }
     *     
     */
    public ActivePower getRtgOverExcitedW() {
        return rtgOverExcitedW;
    }

    /**
     * Sets the value of the rtgOverExcitedW property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActivePower }
     *     
     */
    public void setRtgOverExcitedW(ActivePower value) {
        this.rtgOverExcitedW = value;
    }

    /**
     * Gets the value of the rtgReactiveSusceptance property.
     * 
     * @return
     *     possible object is
     *     {@link ReactiveSusceptance }
     *     
     */
    public ReactiveSusceptance getRtgReactiveSusceptance() {
        return rtgReactiveSusceptance;
    }

    /**
     * Sets the value of the rtgReactiveSusceptance property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReactiveSusceptance }
     *     
     */
    public void setRtgReactiveSusceptance(ReactiveSusceptance value) {
        this.rtgReactiveSusceptance = value;
    }

    /**
     * Gets the value of the rtgUnderExcitedPF property.
     * 
     * @return
     *     possible object is
     *     {@link PowerFactor }
     *     
     */
    public PowerFactor getRtgUnderExcitedPF() {
        return rtgUnderExcitedPF;
    }

    /**
     * Sets the value of the rtgUnderExcitedPF property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerFactor }
     *     
     */
    public void setRtgUnderExcitedPF(PowerFactor value) {
        this.rtgUnderExcitedPF = value;
    }

    /**
     * Gets the value of the rtgUnderExcitedW property.
     * 
     * @return
     *     possible object is
     *     {@link ActivePower }
     *     
     */
    public ActivePower getRtgUnderExcitedW() {
        return rtgUnderExcitedW;
    }

    /**
     * Sets the value of the rtgUnderExcitedW property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActivePower }
     *     
     */
    public void setRtgUnderExcitedW(ActivePower value) {
        this.rtgUnderExcitedW = value;
    }

    /**
     * Gets the value of the rtgVNom property.
     * 
     * @return
     *     possible object is
     *     {@link VoltageRMS }
     *     
     */
    public VoltageRMS getRtgVNom() {
        return rtgVNom;
    }

    /**
     * Sets the value of the rtgVNom property.
     * 
     * @param value
     *     allowed object is
     *     {@link VoltageRMS }
     *     
     */
    public void setRtgVNom(VoltageRMS value) {
        this.rtgVNom = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link DERType }
     *     
     */
    public DERType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERType }
     *     
     */
    public void setType(DERType value) {
        this.type = value;
    }

}
