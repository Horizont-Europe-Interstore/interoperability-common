//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.11.19 at 12:20:19 PM CET 
//


package ieee.std._2030_5.ns;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Distributed Energy Resource (DER) control values.
 * 
 * <p>Java class for DERControlBase complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DERControlBase"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="opModConnect" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="opModEnergize" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="opModFixedPFAbsorbW" type="{urn:ieee:std:2030.5:ns}PowerFactorWithExcitation" minOccurs="0"/&gt;
 *         &lt;element name="opModFixedPFInjectW" type="{urn:ieee:std:2030.5:ns}PowerFactorWithExcitation" minOccurs="0"/&gt;
 *         &lt;element name="opModFixedVar" type="{urn:ieee:std:2030.5:ns}FixedVar" minOccurs="0"/&gt;
 *         &lt;element name="opModFixedW" type="{urn:ieee:std:2030.5:ns}SignedPerCent" minOccurs="0"/&gt;
 *         &lt;element name="opModFreqDroop" type="{urn:ieee:std:2030.5:ns}FreqDroopType" minOccurs="0"/&gt;
 *         &lt;element name="opModFreqWatt" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModHFRTMayTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModHFRTMustTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModHVRTMayTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModHVRTMomentaryCessation" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModHVRTMustTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModLFRTMayTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModLFRTMustTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModLVRTMayTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModLVRTMomentaryCessation" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModLVRTMustTrip" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModMaxLimW" type="{urn:ieee:std:2030.5:ns}PerCent" minOccurs="0"/&gt;
 *         &lt;element name="opModTargetVar" type="{urn:ieee:std:2030.5:ns}ReactivePower" minOccurs="0"/&gt;
 *         &lt;element name="opModTargetW" type="{urn:ieee:std:2030.5:ns}ActivePower" minOccurs="0"/&gt;
 *         &lt;element name="opModVoltVar" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModVoltWatt" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModWattPF" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="opModWattVar" type="{urn:ieee:std:2030.5:ns}DERCurveLink" minOccurs="0"/&gt;
 *         &lt;element name="rampTms" type="{urn:ieee:std:2030.5:ns}UInt16" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DERControlBase", propOrder = {
    "opModConnect",
    "opModEnergize",
    "opModFixedPFAbsorbW",
    "opModFixedPFInjectW",
    "opModFixedVar",
    "opModFixedW",
    "opModFreqDroop",
    "opModFreqWatt",
    "opModHFRTMayTrip",
    "opModHFRTMustTrip",
    "opModHVRTMayTrip",
    "opModHVRTMomentaryCessation",
    "opModHVRTMustTrip",
    "opModLFRTMayTrip",
    "opModLFRTMustTrip",
    "opModLVRTMayTrip",
    "opModLVRTMomentaryCessation",
    "opModLVRTMustTrip",
    "opModMaxLimW",
    "opModTargetVar",
    "opModTargetW",
    "opModVoltVar",
    "opModVoltWatt",
    "opModWattPF",
    "opModWattVar",
    "rampTms"
})
public class DERControlBase {

    protected Boolean opModConnect;
    protected Boolean opModEnergize;
    protected PowerFactorWithExcitation opModFixedPFAbsorbW;
    protected PowerFactorWithExcitation opModFixedPFInjectW;
    protected FixedVar opModFixedVar;
    protected SignedPerCent opModFixedW;
    protected FreqDroopType opModFreqDroop;
    protected DERCurveLink opModFreqWatt;
    protected DERCurveLink opModHFRTMayTrip;
    protected DERCurveLink opModHFRTMustTrip;
    protected DERCurveLink opModHVRTMayTrip;
    protected DERCurveLink opModHVRTMomentaryCessation;
    protected DERCurveLink opModHVRTMustTrip;
    protected DERCurveLink opModLFRTMayTrip;
    protected DERCurveLink opModLFRTMustTrip;
    protected DERCurveLink opModLVRTMayTrip;
    protected DERCurveLink opModLVRTMomentaryCessation;
    protected DERCurveLink opModLVRTMustTrip;
    protected PerCent opModMaxLimW;
    protected ReactivePower opModTargetVar;
    protected ActivePower opModTargetW;
    protected DERCurveLink opModVoltVar;
    protected DERCurveLink opModVoltWatt;
    protected DERCurveLink opModWattPF;
    protected DERCurveLink opModWattVar;
    @XmlSchemaType(name = "unsignedShort")
    protected Integer rampTms;

    /**
     * Gets the value of the opModConnect property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOpModConnect() {
        return opModConnect;
    }

    /**
     * Sets the value of the opModConnect property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOpModConnect(Boolean value) {
        this.opModConnect = value;
    }

    /**
     * Gets the value of the opModEnergize property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOpModEnergize() {
        return opModEnergize;
    }

    /**
     * Sets the value of the opModEnergize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOpModEnergize(Boolean value) {
        this.opModEnergize = value;
    }

    /**
     * Gets the value of the opModFixedPFAbsorbW property.
     * 
     * @return
     *     possible object is
     *     {@link PowerFactorWithExcitation }
     *     
     */
    public PowerFactorWithExcitation getOpModFixedPFAbsorbW() {
        return opModFixedPFAbsorbW;
    }

    /**
     * Sets the value of the opModFixedPFAbsorbW property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerFactorWithExcitation }
     *     
     */
    public void setOpModFixedPFAbsorbW(PowerFactorWithExcitation value) {
        this.opModFixedPFAbsorbW = value;
    }

    /**
     * Gets the value of the opModFixedPFInjectW property.
     * 
     * @return
     *     possible object is
     *     {@link PowerFactorWithExcitation }
     *     
     */
    public PowerFactorWithExcitation getOpModFixedPFInjectW() {
        return opModFixedPFInjectW;
    }

    /**
     * Sets the value of the opModFixedPFInjectW property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerFactorWithExcitation }
     *     
     */
    public void setOpModFixedPFInjectW(PowerFactorWithExcitation value) {
        this.opModFixedPFInjectW = value;
    }

    /**
     * Gets the value of the opModFixedVar property.
     * 
     * @return
     *     possible object is
     *     {@link FixedVar }
     *     
     */
    public FixedVar getOpModFixedVar() {
        return opModFixedVar;
    }

    /**
     * Sets the value of the opModFixedVar property.
     * 
     * @param value
     *     allowed object is
     *     {@link FixedVar }
     *     
     */
    public void setOpModFixedVar(FixedVar value) {
        this.opModFixedVar = value;
    }

    /**
     * Gets the value of the opModFixedW property.
     * 
     * @return
     *     possible object is
     *     {@link SignedPerCent }
     *     
     */
    public SignedPerCent getOpModFixedW() {
        return opModFixedW;
    }

    /**
     * Sets the value of the opModFixedW property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignedPerCent }
     *     
     */
    public void setOpModFixedW(SignedPerCent value) {
        this.opModFixedW = value;
    }

    /**
     * Gets the value of the opModFreqDroop property.
     * 
     * @return
     *     possible object is
     *     {@link FreqDroopType }
     *     
     */
    public FreqDroopType getOpModFreqDroop() {
        return opModFreqDroop;
    }

    /**
     * Sets the value of the opModFreqDroop property.
     * 
     * @param value
     *     allowed object is
     *     {@link FreqDroopType }
     *     
     */
    public void setOpModFreqDroop(FreqDroopType value) {
        this.opModFreqDroop = value;
    }

    /**
     * Gets the value of the opModFreqWatt property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModFreqWatt() {
        return opModFreqWatt;
    }

    /**
     * Sets the value of the opModFreqWatt property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModFreqWatt(DERCurveLink value) {
        this.opModFreqWatt = value;
    }

    /**
     * Gets the value of the opModHFRTMayTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModHFRTMayTrip() {
        return opModHFRTMayTrip;
    }

    /**
     * Sets the value of the opModHFRTMayTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModHFRTMayTrip(DERCurveLink value) {
        this.opModHFRTMayTrip = value;
    }

    /**
     * Gets the value of the opModHFRTMustTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModHFRTMustTrip() {
        return opModHFRTMustTrip;
    }

    /**
     * Sets the value of the opModHFRTMustTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModHFRTMustTrip(DERCurveLink value) {
        this.opModHFRTMustTrip = value;
    }

    /**
     * Gets the value of the opModHVRTMayTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModHVRTMayTrip() {
        return opModHVRTMayTrip;
    }

    /**
     * Sets the value of the opModHVRTMayTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModHVRTMayTrip(DERCurveLink value) {
        this.opModHVRTMayTrip = value;
    }

    /**
     * Gets the value of the opModHVRTMomentaryCessation property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModHVRTMomentaryCessation() {
        return opModHVRTMomentaryCessation;
    }

    /**
     * Sets the value of the opModHVRTMomentaryCessation property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModHVRTMomentaryCessation(DERCurveLink value) {
        this.opModHVRTMomentaryCessation = value;
    }

    /**
     * Gets the value of the opModHVRTMustTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModHVRTMustTrip() {
        return opModHVRTMustTrip;
    }

    /**
     * Sets the value of the opModHVRTMustTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModHVRTMustTrip(DERCurveLink value) {
        this.opModHVRTMustTrip = value;
    }

    /**
     * Gets the value of the opModLFRTMayTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModLFRTMayTrip() {
        return opModLFRTMayTrip;
    }

    /**
     * Sets the value of the opModLFRTMayTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModLFRTMayTrip(DERCurveLink value) {
        this.opModLFRTMayTrip = value;
    }

    /**
     * Gets the value of the opModLFRTMustTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModLFRTMustTrip() {
        return opModLFRTMustTrip;
    }

    /**
     * Sets the value of the opModLFRTMustTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModLFRTMustTrip(DERCurveLink value) {
        this.opModLFRTMustTrip = value;
    }

    /**
     * Gets the value of the opModLVRTMayTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModLVRTMayTrip() {
        return opModLVRTMayTrip;
    }

    /**
     * Sets the value of the opModLVRTMayTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModLVRTMayTrip(DERCurveLink value) {
        this.opModLVRTMayTrip = value;
    }

    /**
     * Gets the value of the opModLVRTMomentaryCessation property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModLVRTMomentaryCessation() {
        return opModLVRTMomentaryCessation;
    }

    /**
     * Sets the value of the opModLVRTMomentaryCessation property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModLVRTMomentaryCessation(DERCurveLink value) {
        this.opModLVRTMomentaryCessation = value;
    }

    /**
     * Gets the value of the opModLVRTMustTrip property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModLVRTMustTrip() {
        return opModLVRTMustTrip;
    }

    /**
     * Sets the value of the opModLVRTMustTrip property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModLVRTMustTrip(DERCurveLink value) {
        this.opModLVRTMustTrip = value;
    }

    /**
     * Gets the value of the opModMaxLimW property.
     * 
     * @return
     *     possible object is
     *     {@link PerCent }
     *     
     */
    public PerCent getOpModMaxLimW() {
        return opModMaxLimW;
    }

    /**
     * Sets the value of the opModMaxLimW property.
     * 
     * @param value
     *     allowed object is
     *     {@link PerCent }
     *     
     */
    public void setOpModMaxLimW(PerCent value) {
        this.opModMaxLimW = value;
    }

    /**
     * Gets the value of the opModTargetVar property.
     * 
     * @return
     *     possible object is
     *     {@link ReactivePower }
     *     
     */
    public ReactivePower getOpModTargetVar() {
        return opModTargetVar;
    }

    /**
     * Sets the value of the opModTargetVar property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReactivePower }
     *     
     */
    public void setOpModTargetVar(ReactivePower value) {
        this.opModTargetVar = value;
    }

    /**
     * Gets the value of the opModTargetW property.
     * 
     * @return
     *     possible object is
     *     {@link ActivePower }
     *     
     */
    public ActivePower getOpModTargetW() {
        return opModTargetW;
    }

    /**
     * Sets the value of the opModTargetW property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActivePower }
     *     
     */
    public void setOpModTargetW(ActivePower value) {
        this.opModTargetW = value;
    }

    /**
     * Gets the value of the opModVoltVar property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModVoltVar() {
        return opModVoltVar;
    }

    /**
     * Sets the value of the opModVoltVar property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModVoltVar(DERCurveLink value) {
        this.opModVoltVar = value;
    }

    /**
     * Gets the value of the opModVoltWatt property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModVoltWatt() {
        return opModVoltWatt;
    }

    /**
     * Sets the value of the opModVoltWatt property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModVoltWatt(DERCurveLink value) {
        this.opModVoltWatt = value;
    }

    /**
     * Gets the value of the opModWattPF property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModWattPF() {
        return opModWattPF;
    }

    /**
     * Sets the value of the opModWattPF property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModWattPF(DERCurveLink value) {
        this.opModWattPF = value;
    }

    /**
     * Gets the value of the opModWattVar property.
     * 
     * @return
     *     possible object is
     *     {@link DERCurveLink }
     *     
     */
    public DERCurveLink getOpModWattVar() {
        return opModWattVar;
    }

    /**
     * Sets the value of the opModWattVar property.
     * 
     * @param value
     *     allowed object is
     *     {@link DERCurveLink }
     *     
     */
    public void setOpModWattVar(DERCurveLink value) {
        this.opModWattVar = value;
    }

    /**
     * Gets the value of the rampTms property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getRampTms() {
        return rampTms;
    }

    /**
     * Sets the value of the rampTms property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setRampTms(Integer value) {
        this.rampTms = value;
    }

}
